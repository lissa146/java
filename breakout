<!doctype html>
<html lang="en-US">
<head>
    <meta charset="utf-8" />
    <title>potato!</title>



    <style>
        *{
            padding: 0;
            margin: 0;
        }

        canvas {
            background: #7b1069;
            display: block;
            margin: 0 auto;
        }
    </style>
</head>
<body>

    <canvas id="myCanvas" width="1000" height="900"></canvas>
        <script>
            var canvas = document.getElementById("myCanvas");
            var ctx = canvas.getContext("2d");

            var BallX = canvas.width/2;
            var BallY = canvas.height-30;
            var bVx = 2;
            var bVy = -2;
            var ballRadius = 10;
            var paddleHeight = 5;
            var paddleWidth = 75;
            var paddleX = (canvas.width - paddleWidth) / 2;
            var rightPressed = false;
            var leftPressed = false;
            let interval = 0;

            const brickRowCount = 3;
            const brickColumnCount = 5;
            const brickWidth = 75;
            const brickHeight = 20;
            const brickPadding = 10;
            const brickOffsetTop = 30;
            const brickOffsetLeft= 30;

            const bricks = [];
            for (let c = 0; c < brickColumnCount; c++){
                bricks[c] = [];

                for (let r = 0; r < brickRowCount; r++){
                    bricks[c][r]= {x: 0, y: 0};
                }
            }

            function drawBricks(){
                for (let c = 0; c < brickColumnCount; c++){
                    for (let r = 0; r < brickRowCount; r++){
                        const brickX = c * (brickWidth + brickPadding) + brickOffsetLeft;

                        const brickY = r * (brickHeight + brickPadding) + brickOffsetTop;

                        brick[c][r].x = brickX;
                        brick[c][r].y = brickY;

                        ctx.beginPath();
                        ctx.rect(brickX, brickY, brickWidth, brickHeight);

                        ctx.fillStyle = "#0095DD";

                        ctz.fill();
                        ctx.closePath();
                    }
                }
            }


            
            document.addEventListener("keydown",keyDownHandler, false);
            document.addEventListener("keyup",keyUpHandler, false);

            function keyDownHandler(e) {
                if (e.code == "ArrowRight"){
                    rightPressed = true;
                }
                else if (e.code == 'ArrowLeft'){
                    leftPressed = true;
                }
            }
            function keyUpHandler(e) {
                if (e.code == "ArrowRight"){
                    rightPressed = false;
                }
                else if (e.code == 'ArrowLeft'){
                    leftPressed = false;
                }
            }

            function drawPaddle() {
                ctx.beginPath();
                ctx.rect(paddleX, canvas.height - paddleHeight, paddleWidth,paddleHeight);
                ctx.fillStyle = "#0095DD";
                ctx.fill();
                ctx.closePath();
            }

            function MovePaddle(){
                if (rightPressed == true){
                    paddleX += 5
                }
                else if (leftPressed == true){
                    paddleX -= 5
                }
                else{
                    paddleX += 0
                }

            }


            function drawBall() {
                ctx.beginPath();
                ctx.arc(BallX, BallY, 10,0 ,Math.PI*2);
                ctx.fillStyle = "#0095DD";
                ctx.fill();
                ctx.closePath();
            }

            function MoveBall() {
                BallY += bVy;
                BallX += bVx;
                console.log("insideMOveball")
            }

            function CheckCollision(){
                if (BallX + bVx > canvas.width-ballRadius || BallX + bVx < ballRadius) {
                    bVx = -bVx;
                }

                if (ballY + bVy < ballRadius){
                    bVy = - bVy;
                }

                if ( BallY + bVy > canvas.width-ballRadius) {
                    if (BallX > paddleX && ballX < paddle + paddleWidth){
                    bVy =- bVy;
                    console.log ("hit the paddle");
                    }
                }   else {
                    alert("GAMEOVER");
                    document.location.reload();
                    clearinterval(interval);
                }

            }

            function draw() {
                ctx.clearRect(0,0, canvas.width, canvas.height);
                drawBall();
                MoveBall();
                CheckCollision();
                drawPaddle();
                MovePaddle();
                drawBricks();
            }

            interval = setInterval(draw, 10);
        </script>
</body>
</html>
